foldr :: (a -> b -> b) -> b -> [a] -> b
foldr _ z [] = z
foldr f z (x:xs) = f x (foldr f z xs)

inf1 = 1:inf1
head (foldr (:) [] inf1)

ind :: t
ind = ind

foldr (\x r -> x) ind inf1



--------
(\r: {a: Nat} . r.a) {a: Nat, b: Bool}

s <: t
-------
T s <: T t

s <: t

[t] <: [s]

[{a: Nat}]
[{a: Nat, b:Nat}]

--------------------

C1: P :- Q(X). {P, no Q(X)}
C2: Q(1).

?- P

(C1 y C2) => P es valido?
no (no (C1 y C2) o P) es unsat

(C1 y C2 y no P)

{p(Y,a)} {~p(b,X)}

p(X, a).
q(Y, a).


q(X) : - q(X), p(X) {q(X), no q(X), p(X)}

~ q(1) {no q(1)}
{q(X), no q(X), p(X)}
{no q(1)}
(2 y 1) X = 1 {no q(1), p(1)}
(3 y 1) X = 1 {no q(1), p(1), p(1)}

------

